%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 180 240
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, November 6, 2021 at 7:16:21 PM Eastern Daylight Time
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
180 240 setpagesize
0 0 0 0 setmargins
0 0 setorigin
180 240 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
180.000 0.00000 l
180.000 240.000 l
0.00000 240.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
180.000 0.00000 l
180.000 240.000 l
0.00000 240.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 180 240 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 15.0000 245.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-15.0000 -245.000 m
165.000 -245.000 l
165.000 -5.00000 l
-15.0000 -5.00000 l
-15.0000 -245.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 15.0000 245.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 15.0000 245.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 15.0000 245.000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
30.0000 -215.000 m
30.0000 -206.716 23.2843 -200.000 15.0000 -200.000  c
6.71573 -200.000 0.00000 -206.716 0.00000 -215.000  c
0.00000 -223.284 6.71573 -230.000 15.0000 -230.000  c
23.2843 -230.000 30.0000 -223.284 30.0000 -215.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
30.0000 -215.000 m
30.0000 -206.716 23.2843 -200.000 15.0000 -200.000  c
6.71573 -200.000 0.00000 -206.716 0.00000 -215.000  c
0.00000 -223.284 6.71573 -230.000 15.0000 -230.000  c
23.2843 -230.000 30.0000 -223.284 30.0000 -215.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
9.92383 -218.627 m
9.92383 -215.330 l
11.4082 -215.330 l
11.9603 -215.330 12.3874 -215.471 12.6895 -215.752  c
12.9915 -216.044 13.1426 -216.455 13.1426 -216.986  c
13.1426 -217.507 12.9915 -217.908 12.6895 -218.189  c
12.3874 -218.481 11.9603 -218.627 11.4082 -218.627  c
9.92383 -218.627 l
h
8.73633 -219.596 m
11.4082 -219.596 l
12.3978 -219.596 13.1426 -219.372 13.6426 -218.924  c
14.1426 -218.486 14.3926 -217.840 14.3926 -216.986  c
14.3926 -216.122 14.1426 -215.465 13.6426 -215.018  c
13.1426 -214.580 12.3978 -214.361 11.4082 -214.361  c
9.92383 -214.361 l
9.92383 -210.846 l
8.73633 -210.846 l
8.73633 -219.596 l
h
16.2852 -211.846 m
18.2227 -211.846 l
18.2227 -218.518 l
16.1133 -218.096 l
16.1133 -219.174 l
18.2070 -219.596 l
19.3945 -219.596 l
19.3945 -211.846 l
21.3320 -211.846 l
21.3320 -210.846 l
16.2852 -210.846 l
16.2852 -211.846 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
150.000 -215.000 m
150.000 -206.716 143.284 -200.000 135.000 -200.000  c
126.716 -200.000 120.000 -206.716 120.000 -215.000  c
120.000 -223.284 126.716 -230.000 135.000 -230.000  c
143.284 -230.000 150.000 -223.284 150.000 -215.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
150.000 -215.000 m
150.000 -206.716 143.284 -200.000 135.000 -200.000  c
126.716 -200.000 120.000 -206.716 120.000 -215.000  c
120.000 -223.284 126.716 -230.000 135.000 -230.000  c
143.284 -230.000 150.000 -223.284 150.000 -215.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
134.728 -218.924 m
134.728 -217.674 l
134.321 -218.049 133.894 -218.325 133.446 -218.502  c
132.998 -218.689 132.519 -218.783 132.009 -218.783  c
131.009 -218.783 130.243 -218.476 129.712 -217.861  c
129.181 -217.247 128.915 -216.361 128.915 -215.205  c
128.915 -214.059 129.181 -213.179 129.712 -212.564  c
130.243 -211.950 131.009 -211.643 132.009 -211.643  c
132.519 -211.643 132.998 -211.736 133.446 -211.924  c
133.894 -212.111 134.321 -212.387 134.728 -212.752  c
134.728 -211.518 l
134.311 -211.236 133.868 -211.023 133.399 -210.877  c
132.941 -210.742 132.457 -210.674 131.946 -210.674  c
130.613 -210.674 129.566 -211.080 128.806 -211.893  c
128.045 -212.705 127.665 -213.809 127.665 -215.205  c
127.665 -216.611 128.045 -217.721 128.806 -218.533  c
129.566 -219.346 130.613 -219.752 131.946 -219.752  c
132.467 -219.752 132.957 -219.679 133.415 -219.533  c
133.884 -219.398 134.321 -219.195 134.728 -218.924  c
h
136.856 -211.846 m
138.794 -211.846 l
138.794 -218.518 l
136.685 -218.096 l
136.685 -219.174 l
138.778 -219.596 l
139.966 -219.596 l
139.966 -211.846 l
141.903 -211.846 l
141.903 -210.846 l
136.856 -210.846 l
136.856 -211.846 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
30.0000 -155.000 m
30.0000 -146.716 23.2843 -140.000 15.0000 -140.000  c
6.71573 -140.000 0.00000 -146.716 0.00000 -155.000  c
0.00000 -163.284 6.71573 -170.000 15.0000 -170.000  c
23.2843 -170.000 30.0000 -163.284 30.0000 -155.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
30.0000 -155.000 m
30.0000 -146.716 23.2843 -140.000 15.0000 -140.000  c
6.71573 -140.000 0.00000 -146.716 0.00000 -155.000  c
0.00000 -163.284 6.71573 -170.000 15.0000 -170.000  c
23.2843 -170.000 30.0000 -163.284 30.0000 -155.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
9.92383 -158.627 m
9.92383 -155.330 l
11.4082 -155.330 l
11.9603 -155.330 12.3874 -155.471 12.6895 -155.752  c
12.9915 -156.044 13.1426 -156.455 13.1426 -156.986  c
13.1426 -157.507 12.9915 -157.908 12.6895 -158.189  c
12.3874 -158.481 11.9603 -158.627 11.4082 -158.627  c
9.92383 -158.627 l
h
8.73633 -159.596 m
11.4082 -159.596 l
12.3978 -159.596 13.1426 -159.372 13.6426 -158.924  c
14.1426 -158.486 14.3926 -157.840 14.3926 -156.986  c
14.3926 -156.122 14.1426 -155.465 13.6426 -155.018  c
13.1426 -154.580 12.3978 -154.361 11.4082 -154.361  c
9.92383 -154.361 l
9.92383 -150.846 l
8.73633 -150.846 l
8.73633 -159.596 l
h
17.0977 -151.846 m
21.2383 -151.846 l
21.2383 -150.846 l
15.6758 -150.846 l
15.6758 -151.846 l
16.1237 -152.304 16.7331 -152.924 17.5039 -153.705  c
18.2852 -154.497 18.7747 -155.007 18.9727 -155.236  c
19.3581 -155.653 19.6237 -156.007 19.7695 -156.299  c
19.9258 -156.601 20.0039 -156.893 20.0039 -157.174  c
20.0039 -157.643 19.8372 -158.023 19.5039 -158.314  c
19.1810 -158.606 18.7591 -158.752 18.2383 -158.752  c
17.8633 -158.752 17.4674 -158.689 17.0508 -158.564  c
16.6445 -158.439 16.2070 -158.242 15.7383 -157.971  c
15.7383 -159.174 l
16.2174 -159.361 16.6602 -159.502 17.0664 -159.596  c
17.4831 -159.700 17.8633 -159.752 18.2070 -159.752  c
19.1133 -159.752 19.8372 -159.523 20.3789 -159.064  c
20.9206 -158.617 21.1914 -158.012 21.1914 -157.252  c
21.1914 -156.898 21.1237 -156.559 20.9883 -156.236  c
20.8529 -155.913 20.6081 -155.533 20.2539 -155.096  c
20.1497 -154.981 19.8372 -154.653 19.3164 -154.111  c
18.7956 -153.570 18.0560 -152.814 17.0977 -151.846  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
150.000 -155.000 m
150.000 -146.716 143.284 -140.000 135.000 -140.000  c
126.716 -140.000 120.000 -146.716 120.000 -155.000  c
120.000 -163.284 126.716 -170.000 135.000 -170.000  c
143.284 -170.000 150.000 -163.284 150.000 -155.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
150.000 -155.000 m
150.000 -146.716 143.284 -140.000 135.000 -140.000  c
126.716 -140.000 120.000 -146.716 120.000 -155.000  c
120.000 -163.284 126.716 -170.000 135.000 -170.000  c
143.284 -170.000 150.000 -163.284 150.000 -155.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
134.728 -158.924 m
134.728 -157.674 l
134.321 -158.049 133.894 -158.325 133.446 -158.502  c
132.998 -158.689 132.519 -158.783 132.009 -158.783  c
131.009 -158.783 130.243 -158.476 129.712 -157.861  c
129.181 -157.247 128.915 -156.361 128.915 -155.205  c
128.915 -154.059 129.181 -153.179 129.712 -152.564  c
130.243 -151.950 131.009 -151.643 132.009 -151.643  c
132.519 -151.643 132.998 -151.736 133.446 -151.924  c
133.894 -152.111 134.321 -152.387 134.728 -152.752  c
134.728 -151.518 l
134.311 -151.236 133.868 -151.023 133.399 -150.877  c
132.941 -150.742 132.457 -150.674 131.946 -150.674  c
130.613 -150.674 129.566 -151.080 128.806 -151.893  c
128.045 -152.705 127.665 -153.809 127.665 -155.205  c
127.665 -156.611 128.045 -157.721 128.806 -158.533  c
129.566 -159.346 130.613 -159.752 131.946 -159.752  c
132.467 -159.752 132.957 -159.679 133.415 -159.533  c
133.884 -159.398 134.321 -159.195 134.728 -158.924  c
h
137.669 -151.846 m
141.810 -151.846 l
141.810 -150.846 l
136.247 -150.846 l
136.247 -151.846 l
136.695 -152.304 137.304 -152.924 138.075 -153.705  c
138.856 -154.497 139.346 -155.007 139.544 -155.236  c
139.929 -155.653 140.195 -156.007 140.341 -156.299  c
140.497 -156.601 140.575 -156.893 140.575 -157.174  c
140.575 -157.643 140.409 -158.023 140.075 -158.314  c
139.752 -158.606 139.330 -158.752 138.810 -158.752  c
138.435 -158.752 138.039 -158.689 137.622 -158.564  c
137.216 -158.439 136.778 -158.242 136.310 -157.971  c
136.310 -159.174 l
136.789 -159.361 137.231 -159.502 137.638 -159.596  c
138.054 -159.700 138.435 -159.752 138.778 -159.752  c
139.685 -159.752 140.409 -159.523 140.950 -159.064  c
141.492 -158.617 141.763 -158.012 141.763 -157.252  c
141.763 -156.898 141.695 -156.559 141.560 -156.236  c
141.424 -155.913 141.179 -155.533 140.825 -155.096  c
140.721 -154.981 140.409 -154.653 139.888 -154.111  c
139.367 -153.570 138.627 -152.814 137.669 -151.846  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
30.0000 -95.0000 m
30.0000 -86.7157 23.2843 -80.0000 15.0000 -80.0000  c
6.71573 -80.0000 0.00000 -86.7157 0.00000 -95.0000  c
0.00000 -103.284 6.71573 -110.000 15.0000 -110.000  c
23.2843 -110.000 30.0000 -103.284 30.0000 -95.0000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
30.0000 -95.0000 m
30.0000 -86.7157 23.2843 -80.0000 15.0000 -80.0000  c
6.71573 -80.0000 0.00000 -86.7157 0.00000 -95.0000  c
0.00000 -103.284 6.71573 -110.000 15.0000 -110.000  c
23.2843 -110.000 30.0000 -103.284 30.0000 -95.0000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
10.5596 -92.3301 m
11.7939 -92.3301 l
11.7939 -90.8457 l
10.5596 -90.8457 l
10.5596 -92.3301 l
h
14.3740 -92.3301 m
15.6084 -92.3301 l
15.6084 -90.8457 l
14.3740 -90.8457 l
14.3740 -92.3301 l
h
18.1885 -92.3301 m
19.4229 -92.3301 l
19.4229 -90.8457 l
18.1885 -90.8457 l
18.1885 -92.3301 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
150.000 -95.0000 m
150.000 -86.7157 143.284 -80.0000 135.000 -80.0000  c
126.716 -80.0000 120.000 -86.7157 120.000 -95.0000  c
120.000 -103.284 126.716 -110.000 135.000 -110.000  c
143.284 -110.000 150.000 -103.284 150.000 -95.0000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
150.000 -95.0000 m
150.000 -86.7157 143.284 -80.0000 135.000 -80.0000  c
126.716 -80.0000 120.000 -86.7157 120.000 -95.0000  c
120.000 -103.284 126.716 -110.000 135.000 -110.000  c
143.284 -110.000 150.000 -103.284 150.000 -95.0000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
130.560 -92.3301 m
131.794 -92.3301 l
131.794 -90.8457 l
130.560 -90.8457 l
130.560 -92.3301 l
h
134.374 -92.3301 m
135.608 -92.3301 l
135.608 -90.8457 l
134.374 -90.8457 l
134.374 -92.3301 l
h
138.188 -92.3301 m
139.423 -92.3301 l
139.423 -90.8457 l
138.188 -90.8457 l
138.188 -92.3301 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
30.0000 -35.0000 m
30.0000 -26.7157 23.2843 -20.0000 15.0000 -20.0000  c
6.71573 -20.0000 0.00000 -26.7157 0.00000 -35.0000  c
0.00000 -43.2843 6.71573 -50.0000 15.0000 -50.0000  c
23.2843 -50.0000 30.0000 -43.2843 30.0000 -35.0000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
30.0000 -35.0000 m
30.0000 -26.7157 23.2843 -20.0000 15.0000 -20.0000  c
6.71573 -20.0000 0.00000 -26.7157 0.00000 -35.0000  c
0.00000 -43.2843 6.71573 -50.0000 15.0000 -50.0000  c
23.2843 -50.0000 30.0000 -43.2843 30.0000 -35.0000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
9.92383 -38.6270 m
9.92383 -35.3301 l
11.4082 -35.3301 l
11.9603 -35.3301 12.3874 -35.4707 12.6895 -35.7520  c
12.9915 -36.0436 13.1426 -36.4551 13.1426 -36.9863  c
13.1426 -37.5072 12.9915 -37.9082 12.6895 -38.1895  c
12.3874 -38.4811 11.9603 -38.6270 11.4082 -38.6270  c
9.92383 -38.6270 l
h
8.73633 -39.5957 m
11.4082 -39.5957 l
12.3978 -39.5957 13.1426 -39.3717 13.6426 -38.9238  c
14.1426 -38.4863 14.3926 -37.8405 14.3926 -36.9863  c
14.3926 -36.1217 14.1426 -35.4655 13.6426 -35.0176  c
13.1426 -34.5801 12.3978 -34.3613 11.4082 -34.3613  c
9.92383 -34.3613 l
9.92383 -30.8457 l
8.73633 -30.8457 l
8.73633 -39.5957 l
h
19.3320 -38.5645 m
16.3477 -33.8926 l
19.3320 -33.8926 l
19.3320 -38.5645 l
h
19.0195 -39.5957 m
20.5195 -39.5957 l
20.5195 -33.8926 l
21.7695 -33.8926 l
21.7695 -32.9082 l
20.5195 -32.9082 l
20.5195 -30.8457 l
19.3320 -30.8457 l
19.3320 -32.9082 l
15.3945 -32.9082 l
15.3945 -34.0488 l
19.0195 -39.5957 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
150.000 -35.0000 m
150.000 -26.7157 143.284 -20.0000 135.000 -20.0000  c
126.716 -20.0000 120.000 -26.7157 120.000 -35.0000  c
120.000 -43.2843 126.716 -50.0000 135.000 -50.0000  c
143.284 -50.0000 150.000 -43.2843 150.000 -35.0000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
150.000 -35.0000 m
150.000 -26.7157 143.284 -20.0000 135.000 -20.0000  c
126.716 -20.0000 120.000 -26.7157 120.000 -35.0000  c
120.000 -43.2843 126.716 -50.0000 135.000 -50.0000  c
143.284 -50.0000 150.000 -43.2843 150.000 -35.0000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
134.728 -38.9238 m
134.728 -37.6738 l
134.321 -38.0488 133.894 -38.3249 133.446 -38.5020  c
132.998 -38.6895 132.519 -38.7832 132.009 -38.7832  c
131.009 -38.7832 130.243 -38.4759 129.712 -37.8613  c
129.181 -37.2467 128.915 -36.3613 128.915 -35.2051  c
128.915 -34.0592 129.181 -33.1790 129.712 -32.5645  c
130.243 -31.9499 131.009 -31.6426 132.009 -31.6426  c
132.519 -31.6426 132.998 -31.7363 133.446 -31.9238  c
133.894 -32.1113 134.321 -32.3874 134.728 -32.7520  c
134.728 -31.5176 l
134.311 -31.2363 133.868 -31.0228 133.399 -30.8770  c
132.941 -30.7415 132.457 -30.6738 131.946 -30.6738  c
130.613 -30.6738 129.566 -31.0801 128.806 -31.8926  c
128.045 -32.7051 127.665 -33.8092 127.665 -35.2051  c
127.665 -36.6113 128.045 -37.7207 128.806 -38.5332  c
129.566 -39.3457 130.613 -39.7520 131.946 -39.7520  c
132.467 -39.7520 132.957 -39.6790 133.415 -39.5332  c
133.884 -39.3978 134.321 -39.1947 134.728 -38.9238  c
h
139.903 -38.5645 m
136.919 -33.8926 l
139.903 -33.8926 l
139.903 -38.5645 l
h
139.591 -39.5957 m
141.091 -39.5957 l
141.091 -33.8926 l
142.341 -33.8926 l
142.341 -32.9082 l
141.091 -32.9082 l
141.091 -30.8457 l
139.903 -30.8457 l
139.903 -32.9082 l
135.966 -32.9082 l
135.966 -34.0488 l
139.591 -39.5957 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9552 -226.250 m
117.045 -226.250 l
S
newpath
125.045 -226.250 m
113.045 -231.250 l
116.045 -226.250 l
113.045 -221.250 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9357 -166.250 m
40.0000 -166.250 l
43.1567 -166.660 l
50.7007 -169.941 l
59.2798 -176.504 l
68.1675 -186.348 l
76.8325 -198.652 l
85.7202 -208.496 l
94.2993 -215.059 l
101.843 -218.340 l
105.000 -218.750 l
112.469 -218.750 l
S
newpath
120.469 -218.750 m
108.469 -223.750 l
111.469 -218.750 l
108.469 -213.750 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -158.750 m
112.469 -158.750 l
S
newpath
120.469 -158.750 m
108.469 -163.750 l
111.469 -158.750 l
108.469 -153.750 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -218.750 m
40.0000 -218.750 l
43.1567 -218.340 l
50.7007 -215.059 l
59.2798 -208.496 l
68.1675 -198.652 l
76.8325 -186.348 l
85.7202 -176.504 l
94.2993 -169.941 l
101.843 -166.660 l
105.000 -166.250 l
117.055 -166.250 l
S
newpath
125.055 -166.250 m
113.055 -171.250 l
116.055 -166.250 l
113.055 -161.250 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9357 -106.250 m
40.0000 -106.250 l
41.5176 -106.455 l
44.9059 -108.096 l
48.6893 -111.377 l
52.7768 -116.299 l
59.2798 -126.758 l
68.1675 -146.445 l
76.8325 -171.055 l
85.7202 -190.742 l
92.2232 -201.201 l
96.3107 -206.123 l
100.094 -209.404 l
103.482 -211.045 l
105.000 -211.250 l
112.469 -211.250 l
S
newpath
120.469 -211.250 m
108.469 -216.250 l
111.469 -211.250 l
108.469 -206.250 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -98.7500 m
40.0000 -98.7500 l
43.1567 -99.1602 l
50.7007 -102.441 l
59.2798 -109.004 l
68.1675 -118.848 l
76.8325 -131.152 l
85.7202 -140.996 l
94.2993 -147.559 l
101.843 -150.840 l
105.000 -151.250 l
112.469 -151.250 l
S
newpath
120.469 -151.250 m
108.469 -156.250 l
111.469 -151.250 l
108.469 -146.250 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -91.2500 m
112.469 -91.2500 l
S
newpath
120.469 -91.2500 m
108.469 -96.2500 l
111.469 -91.2500 l
108.469 -86.2500 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -211.250 m
40.0000 -211.250 l
41.5176 -211.045 l
44.9059 -209.404 l
48.6893 -206.123 l
52.7768 -201.201 l
59.2798 -190.742 l
68.1675 -171.055 l
76.8325 -146.445 l
85.7202 -126.758 l
92.2232 -116.299 l
96.3107 -111.377 l
100.094 -108.096 l
103.482 -106.455 l
105.000 -106.250 l
117.055 -106.250 l
S
newpath
125.055 -106.250 m
113.055 -111.250 l
116.055 -106.250 l
113.055 -101.250 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -151.250 m
40.0000 -151.250 l
43.1567 -150.840 l
50.7007 -147.559 l
59.2798 -140.996 l
68.1675 -131.152 l
76.8325 -118.848 l
85.7202 -109.004 l
94.2993 -102.441 l
101.843 -99.1602 l
105.000 -98.7500 l
112.469 -98.7500 l
S
newpath
120.469 -98.7500 m
108.469 -103.750 l
111.469 -98.7500 l
108.469 -93.7500 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -31.2500 m
40.0000 -31.2500 l
43.1567 -31.6602 l
50.7007 -34.9414 l
59.2798 -41.5039 l
68.1675 -51.3477 l
76.8325 -63.6523 l
85.7202 -73.4961 l
94.2993 -80.0586 l
101.843 -83.3398 l
105.000 -83.7500 l
117.055 -83.7500 l
S
newpath
125.055 -83.7500 m
113.055 -88.7500 l
116.055 -83.7500 l
113.055 -78.7500 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9357 -46.2500 m
40.0000 -46.2500 l
41.5176 -46.5576 l
44.9059 -49.0186 l
48.6893 -53.9404 l
52.7768 -61.3232 l
57.0777 -71.1670 l
61.5012 -83.4717 l
68.1675 -106.543 l
76.8325 -143.457 l
83.4988 -166.528 l
87.9223 -178.833 l
92.2232 -188.677 l
96.3107 -196.060 l
100.094 -200.981 l
103.482 -203.442 l
105.000 -203.750 l
117.055 -203.750 l
S
newpath
125.055 -203.750 m
113.055 -208.750 l
116.055 -203.750 l
113.055 -198.750 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
29.5312 -38.7500 m
40.0000 -38.7500 l
41.5176 -38.9551 l
44.9059 -40.5957 l
48.6893 -43.8770 l
52.7768 -48.7988 l
59.2798 -59.2578 l
68.1675 -78.9453 l
76.8325 -103.555 l
85.7202 -123.242 l
92.2232 -133.701 l
96.3107 -138.623 l
100.094 -141.904 l
103.482 -143.545 l
105.000 -143.750 l
117.055 -143.750 l
S
newpath
125.055 -143.750 m
113.055 -148.750 l
116.055 -143.750 l
113.055 -138.750 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9552 -23.7500 m
117.045 -23.7500 l
S
newpath
125.045 -23.7500 m
113.045 -28.7500 l
116.045 -23.7500 l
113.045 -18.7500 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9357 -83.7500 m
40.0000 -83.7500 l
43.1567 -83.3398 l
50.7007 -80.0586 l
59.2798 -73.4961 l
68.1675 -63.6523 l
76.8325 -51.3477 l
85.7202 -41.5039 l
94.2993 -34.9414 l
101.843 -31.6602 l
105.000 -31.2500 l
112.469 -31.2500 l
S
newpath
120.469 -31.2500 m
108.469 -36.2500 l
111.469 -31.2500 l
108.469 -26.2500 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9357 -203.750 m
40.0000 -203.750 l
41.5176 -203.442 l
44.9059 -200.981 l
48.6893 -196.060 l
52.7768 -188.677 l
57.0777 -178.833 l
61.5012 -166.528 l
68.1675 -143.457 l
76.8325 -106.543 l
83.4988 -83.4717 l
87.9223 -71.1670 l
92.2232 -61.3232 l
96.3107 -53.9404 l
100.094 -49.0186 l
103.482 -46.5576 l
105.000 -46.2500 l
117.055 -46.2500 l
S
newpath
125.055 -46.2500 m
113.055 -51.2500 l
116.055 -46.2500 l
113.055 -41.2500 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
24.9357 -143.750 m
40.0000 -143.750 l
41.5176 -143.545 l
44.9059 -141.904 l
48.6893 -138.623 l
52.7768 -133.701 l
59.2798 -123.242 l
68.1675 -103.555 l
76.8325 -78.9453 l
85.7202 -59.2578 l
92.2232 -48.7988 l
96.3107 -43.8770 l
100.094 -40.5957 l
103.482 -38.9551 l
105.000 -38.7500 l
112.469 -38.7500 l
S
newpath
120.469 -38.7500 m
108.469 -43.7500 l
111.469 -38.7500 l
108.469 -33.7500 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
